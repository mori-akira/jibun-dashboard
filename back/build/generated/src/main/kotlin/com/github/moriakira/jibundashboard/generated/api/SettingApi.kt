/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.14.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
*/
package com.github.moriakira.jibundashboard.generated.api

import com.github.moriakira.jibundashboard.generated.model.ErrorInfo
import com.github.moriakira.jibundashboard.generated.model.Setting
import io.swagger.v3.oas.annotations.*
import io.swagger.v3.oas.annotations.enums.*
import io.swagger.v3.oas.annotations.media.*
import io.swagger.v3.oas.annotations.responses.*
import io.swagger.v3.oas.annotations.security.*
import org.springframework.http.HttpStatus
import org.springframework.http.MediaType
import org.springframework.http.ResponseEntity

import org.springframework.web.bind.annotation.*
import org.springframework.validation.annotation.Validated
import org.springframework.web.context.request.NativeWebRequest
import org.springframework.beans.factory.annotation.Autowired

import jakarta.validation.constraints.DecimalMax
import jakarta.validation.constraints.DecimalMin
import jakarta.validation.constraints.Email
import jakarta.validation.constraints.Max
import jakarta.validation.constraints.Min
import jakarta.validation.constraints.NotNull
import jakarta.validation.constraints.Pattern
import jakarta.validation.constraints.Size
import jakarta.validation.Valid

import kotlin.collections.List
import kotlin.collections.Map

@RestController
@Validated
interface SettingApi {

    @Operation(
        tags = ["Setting",],
        summary = "設定情報取得",
        operationId = "getSetting",
        description = """アクセストークンを用いて、現在ログイン中のユーザの設定を取得する""",
        responses = [
            ApiResponse(responseCode = "200", description = "正常時", content = [Content(schema = Schema(implementation = Setting::class))]),
            ApiResponse(responseCode = "400", description = "パラメータ不正", content = [Content(schema = Schema(implementation = ErrorInfo::class))])
        ]
    )
    @RequestMapping(
            method = [RequestMethod.GET],
            value = ["/setting"],
            produces = ["application/json"]
    )
    fun getSetting(): ResponseEntity<Setting> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }

    @Operation(
        tags = ["Setting",],
        summary = "設定情報登録",
        operationId = "putSetting",
        description = """アクセストークンを用いて、現在ログイン中のユーザの設定を登録(登録済みの場合は情報を置き換え)する""",
        responses = [
            ApiResponse(responseCode = "204", description = "正常時"),
            ApiResponse(responseCode = "400", description = "パラメータ不正", content = [Content(schema = Schema(implementation = ErrorInfo::class))])
        ]
    )
    @RequestMapping(
            method = [RequestMethod.PUT],
            value = ["/setting"],
            produces = ["application/json"],
            consumes = ["application/json"]
    )
    fun putSetting(@Parameter(description = "") @Valid @RequestBody(required = false) setting: Setting?): ResponseEntity<Unit> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }
}
